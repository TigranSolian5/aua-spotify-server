plugins {
    id 'idea'
}

sourceSets {
    integration {
        kotlin.srcDir "$projectDir/src/integration/kotlin"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

idea {
    module {
        testSourceDirs += sourceSets.integration.kotlin.srcDirs
        testResourceDirs += sourceSets.integration.resources.srcDirs
    }
}

tasks.processIntegrationResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

tasks.register('integrationTest', Test) {
    useJUnitPlatform()
    reports {
        junitXml.required = true
    }
    testLogging.showStandardStreams = true
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
    forkEvery = 0
    maxParallelForks = 1
}

integrationTest.doFirst {
    environment "COMPOSE_COMPATIBILITY", "true"
}
