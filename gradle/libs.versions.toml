# see https://docs.gradle.org/current/userguide/platforms.html
[versions]
springBoot = "3.2.2"
springdoc = "2.3.0"
kotlin = "1.9.21"
mapStruct = "1.5.5.Final"
testcontainers = "1.19.3"
axionRelease = "1.15.3"
jacksonVersion = "2.13.1"
openapiPlugin = "1.8.0"
dockerComposePlugin = "0.16.11"
jwt = "0.9.0"
googleApiClient = "2.4.0"

[libraries]
# managed deps
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
spring-boot-annotation-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "springBoot" }
kotlin-dependencies = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }

# plugin libs for plugins used in buildSrc
ktlint-plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version = "11.4.0" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-allopen-plugin = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
axion-release-plugin = { module = "pl.allegro.tech.build:axion-release-plugin", version.ref = "axionRelease" }
kotlin-spring-plugin = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }

# other deps
springdoc-openapi-webflux-api = { module = "org.springdoc:springdoc-openapi-starter-webflux-api", version.ref ="springdoc" }
log4j-api-kotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version = "1.2.0" }
log4j2-ecs-layout = { module = "co.elastic.logging:log4j2-ecs-layout", version = "1.4.0" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapStruct" }
mapstructProc = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapStruct" }
reactor-kafka = { module = "io.projectreactor.kafka:reactor-kafka", version = "1.3.22" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jacksonVersion" }
jwt = { module = "io.github.nefilim.kjwt:kjwt-core", version.ref = "jwt" }
google-api-client = { module = "com.google.api-client:google-api-client", version.ref = "googleApiClient" }

# test libs
#testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
#testcontainers-kafka = { module = "org.testcontainers:kafka", version.ref = "testcontainers" }
#testcontainers-mongodb = { module = "org.testcontainers:mongodb", version.ref = "testcontainers" }
#testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
wiremock-jre8 = { module = "com.github.tomakehurst:wiremock-jre8", version = "2.32.0" }
springmockk = { module = "com.ninja-squad:springmockk", version = "4.0.2" }
mockk = { module = "io.mockk:mockk", version = "1.13.5" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "4.0.0" }
mockito-inline = { module = "org.mockito:mockito-inline", version = "4.0.0" }

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
springdoc-openapi = { id = "org.springdoc.openapi-gradle-plugin", version.ref = "openapiPlugin" }
docker-compose = { id = "com.avast.gradle.docker-compose", version.ref = "dockerComposePlugin" }
